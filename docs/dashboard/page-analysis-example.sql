-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.access_requests (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  email text NOT NULL UNIQUE,
  first_name text NOT NULL,
  last_name text NOT NULL,
  company text NOT NULL,
  status text DEFAULT 'pending'::text,
  requested_at timestamp with time zone DEFAULT now(),
  approved_at timestamp with time zone,
  approved_by uuid,
  generated_password text,
  role text DEFAULT 'client'::text CHECK (role = ANY (ARRAY['super_admin'::text, 'partner'::text, 'client'::text, 'analyst'::text])),
  client_id uuid,
  CONSTRAINT access_requests_pkey PRIMARY KEY (id),
  CONSTRAINT access_requests_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.clients(id),
  CONSTRAINT access_requests_approved_by_fkey FOREIGN KEY (approved_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.analysis_queries (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  analysis_run_id uuid NOT NULL,
  query_id text UNIQUE,
  query_text text NOT NULL,
  query_keyword text,
  query_category text,
  query_topic text,
  query_type text,
  query_intent text,
  funnel_stage text,
  query_complexity text,
  data_source text NOT NULL,
  model_response text,
  citation_count integer DEFAULT 0,
  brand_mentioned boolean DEFAULT false,
  brand_sentiment double precision,
  competitor_mentioned_names ARRAY DEFAULT ARRAY[]::text[],
  competitor_count integer DEFAULT 0,
  associated_pages_count integer DEFAULT 0,
  response_match text,
  response_outcome text,
  brand_mention_type text,
  competitor_context text,
  action_orientation text,
  query_competition text,
  status text DEFAULT 'pending'::text,
  created_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  error_message text,
  brand_mention_count integer DEFAULT 0,
  competitor_analysis jsonb,
  brand_positioning text,
  total_competitor_mentions integer DEFAULT 0,
  associated_pages jsonb DEFAULT '[]'::jsonb,
  CONSTRAINT analysis_queries_pkey PRIMARY KEY (id),
  CONSTRAINT analysis_queries_analysis_run_id_fkey FOREIGN KEY (analysis_run_id) REFERENCES public.analysis_runs(id)
);
CREATE TABLE public.analysis_queue (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  analysis_run_id uuid,
  query_data jsonb NOT NULL,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'processing'::text, 'completed'::text, 'failed'::text, 'cancelled'::text])),
  attempts integer DEFAULT 0,
  max_attempts integer DEFAULT 3,
  error_message text,
  error_details jsonb,
  created_at timestamp with time zone DEFAULT now(),
  started_at timestamp with time zone,
  completed_at timestamp with time zone,
  processor_id text,
  priority integer DEFAULT 1,
  updated_at timestamp with time zone DEFAULT now(),
  error text,
  result jsonb,
  query_text text,
  platform text,
  client_id uuid,
  client_name text,
  client_domain text,
  competitors jsonb,
  CONSTRAINT analysis_queue_pkey PRIMARY KEY (id),
  CONSTRAINT analysis_queue_analysis_run_id_fkey FOREIGN KEY (analysis_run_id) REFERENCES public.analysis_runs(id)
);
CREATE TABLE public.analysis_runs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  client_id uuid NOT NULL,
  batch_id text NOT NULL UNIQUE,
  status text NOT NULL DEFAULT 'pending'::text,
  platform text NOT NULL,
  intents ARRAY DEFAULT ARRAY[]::text[],
  keywords ARRAY DEFAULT ARRAY[]::text[],
  queries_total integer DEFAULT 0,
  queries_completed integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  error_message text,
  competitors jsonb DEFAULT '[]'::jsonb CHECK (competitors IS NULL OR jsonb_typeof(competitors) = 'array'::text),
  created_by uuid,
  test_mode boolean DEFAULT false,
  processing_method text DEFAULT 'sync'::text CHECK (processing_method = ANY (ARRAY['sync'::text, 'queue'::text])),
  queries_queued integer DEFAULT 0,
  queries_processing integer DEFAULT 0,
  queries_failed integer DEFAULT 0,
  partner_id uuid,
  CONSTRAINT analysis_runs_pkey PRIMARY KEY (id),
  CONSTRAINT analysis_runs_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.clients(id),
  CONSTRAINT analysis_runs_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id),
  CONSTRAINT analysis_runs_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.benchmark_data (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  analysis_date date NOT NULL,
  industry_sector text,
  query_keyword text,
  query_category text,
  query_topic text,
  query_type text,
  funnel_stage text,
  data_source text NOT NULL,
  citation_count integer,
  response_match text,
  response_outcome text,
  action_orientation text,
  query_competition text,
  avg_citation_position double precision,
  domain_authority_stats jsonb,
  content_quality_metrics jsonb,
  technical_seo_metrics jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT benchmark_data_pkey PRIMARY KEY (id)
);
CREATE TABLE public.client_access (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  client_id uuid NOT NULL,
  user_id uuid NOT NULL,
  access_level text DEFAULT 'viewer'::text CHECK (access_level = ANY (ARRAY['owner'::text, 'viewer'::text, 'editor'::text])),
  granted_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT client_access_pkey PRIMARY KEY (id),
  CONSTRAINT client_access_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.clients(id),
  CONSTRAINT client_access_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT client_access_granted_by_fkey FOREIGN KEY (granted_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.clients (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL UNIQUE,
  domain text NOT NULL UNIQUE,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  industry_primary text,
  industry_secondary text,
  sub_industry text,
  business_model text,
  target_audience ARRAY DEFAULT '{}'::text[],
  key_products ARRAY DEFAULT '{}'::text[],
  unique_selling_props ARRAY DEFAULT '{}'::text[],
  geographic_focus text,
  brand_voice ARRAY DEFAULT '{}'::text[],
  customer_problems ARRAY DEFAULT '{}'::text[],
  use_cases ARRAY DEFAULT '{}'::text[],
  industry_terminology ARRAY DEFAULT '{}'::text[],
  regulatory_considerations ARRAY DEFAULT '{}'::text[],
  ai_enhanced_at timestamp with time zone,
  ai_enhancement_count integer DEFAULT 0,
  geographic_regions ARRAY DEFAULT '{}'::text[],
  keywords ARRAY DEFAULT '{}'::text[],
  partner_id uuid,
  ai_enhancement_status text,
  ai_enhancement_error text,
  CONSTRAINT clients_pkey PRIMARY KEY (id),
  CONSTRAINT clients_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES public.profiles(id),
  CONSTRAINT clients_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.competitors (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  client_id uuid,
  name text NOT NULL,
  domain text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  source text DEFAULT 'manual'::text CHECK (source = ANY (ARRAY['manual'::text, 'ai'::text])),
  ai_data jsonb,
  added_at timestamp with time zone DEFAULT now(),
  CONSTRAINT competitors_pkey PRIMARY KEY (id),
  CONSTRAINT competitors_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.clients(id)
);
CREATE TABLE public.page_analyses (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  query_id uuid NOT NULL,
  page_analysis_id text NOT NULL,
  citation_url text NOT NULL,
  citation_position integer,
  domain_name text,
  is_client_domain boolean DEFAULT false,
  is_competitor_domain boolean DEFAULT false,
  mention_type ARRAY DEFAULT ARRAY[]::text[],
  analysis_notes text,
  technical_seo jsonb DEFAULT '{}'::jsonb,
  page_performance jsonb DEFAULT '{}'::jsonb,
  domain_authority jsonb DEFAULT '{}'::jsonb,
  on_page_seo jsonb DEFAULT '{}'::jsonb,
  content_quality jsonb DEFAULT '{}'::jsonb,
  page_analysis jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  brand_mentioned boolean DEFAULT false,
  page_title text,
  brand_mention_count integer DEFAULT 0,
  brand_in_title boolean DEFAULT false,
  competitor_mentioned boolean DEFAULT false,
  competitor_analysis jsonb,
  competitor_names ARRAY DEFAULT '{}'::text[],
  brand_context text,
  competitor_context text,
  relevance_score numeric DEFAULT 0,
  content_quality_score numeric DEFAULT 0,
  query_keyword text,
  query_text text,
  crawl_error text,
  client_id uuid,
  crawl_result jsonb,
  eeat_analysis jsonb,
  eeat_score numeric,
  CONSTRAINT page_analyses_pkey PRIMARY KEY (id),
  CONSTRAINT page_analyses_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.clients(id),
  CONSTRAINT page_analyses_query_id_fkey FOREIGN KEY (query_id) REFERENCES public.analysis_queries(id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  email text NOT NULL UNIQUE,
  first_name text NOT NULL,
  last_name text NOT NULL,
  company text NOT NULL,
  role text NOT NULL DEFAULT 'client'::text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  account_type text DEFAULT 'super_admin'::text CHECK (account_type = ANY (ARRAY['super_admin'::text, 'partner'::text, 'client'::text])),
  client_account_id uuid,
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id),
  CONSTRAINT profiles_client_account_id_fkey FOREIGN KEY (client_account_id) REFERENCES public.clients(id)
);